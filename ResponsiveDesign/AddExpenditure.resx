<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAA6hJREFUaEPt
        mrtu1EAUhhcBQuIFkLiKq5AouBVAg0RPJCoEHQ2PAUi8CAWXJoAoqCJQaCgQSYVQQrye8XiTBYQUQWiA
        ZjnH+bMy4/F6Yp/djJA/6VeS8Zz/nJPxjr3e7bS0tLS0tLSETRzHB7VOn6nEfFPaDIIS1RTr9Hm32zuG
        cpvBzZLxaiFReFrtdlcOoOz6ZCvrThCeEjONsutDRmsF43D1HWXXx2EatFB2fVymIQtl18dlGrJQdn1c
        piELZddH3FAY8frEDYURr0/cUBjx+sQNhRGvT9xQGPH6xA2FEa9P3FAY8frEDYURr0/cUBjx+sQNhRGv
        T9xQGPH6xA2FEa9P3FCYrjHnlTK3Y20eUH0rGK5P6A2L0zb8vxNCw0mSnNXa3KX8MyoxH+jn10zrv88o
        ldzRWp/B9GZwk3lheOwMBoNtWqc3lE4+2TWM0CJtYNc5FjabxzbF8FiJ4+UTtOvO27m9lZj3UZoehd3m
        sM0wPDZohaao4J923hpai2NzFbb+2EYYHgv0Wr1COf7YORvot1LpZdj7YZtgWJzImFPk/8POJ6DVOO4d
        R5pqbAMMi8KbDHm/s3NJiXb4t94bmR2MYVFind6084iLdm+kG40diGExsLoLdp6hlHlpjDnCu67zk0xl
        nm4c57mF4xDt+h+RcjR2IIbFoI3qnJ0jr16vtw9T+Z+znZp+PDyuzCMew+EOfz6cjy1IqdOYWo4dhGEx
        VJLet3PklabpXkzNWG86ecKN55tlomh5v8tjQ/Ravoep5dhBGBZD6XTWzvGPEjNtN8Z/u8b49HZ6QNTw
        a0wvxxXYSErtgXUGjS0V5tiipmdnBzsQUmBubm5nVbPQIkLKcQQ1UhRFu2Cd4X1XVdI0j/ExZ0xRawgr
        xxHUSP1+fzesM7wbphXklUTYkE2sLmvyDdOufBjWGT7vhvjxjf2azcPH8IjHGZ/TAkLK8V4BT2nduwDr
        DGr4jWveULR6rg3KNVb1jSPfTeuFHdhEVNQtWGdUXZby12FmvTH3ZanqOux1WdJan6TJcl9MS8xDWGdU
        3Xjkr8NYxdIbj6rrsNeNBzP86qHMd7b6VOTwRp5/p7GRt5bcCMt5ytIpv3Gc5xaOQ963lpOAGrnmKlJU
        ykwh3daDVQ7j7eGkoNfXISrui11sU9GpvGzfjwdDEI94Jg01fYkKlVjpz3SFuQjbsNnSx7RbBW8ytHtP
        /kF8CNBpnn3UwreG1BS/nfwFLVGDr/w/aul0/gLv08vUnpaevAAAAABJRU5ErkJggg==
</value>
  </data>
</root>